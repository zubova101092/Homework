#1. Создать программный файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных будет свидетельствовать пустая строка.
my_f = open('my_file.txt', 'w')
text = input('Введите текст: \n')
while text:
     my_f.writelines(f'{text} \n')
     text = input('Введите текст: \n')
     if not text:
         break

my_f.close()
my_f = open('my_file.txt', 'r')
content = my_f.readlines()
print(content)
my_f.close()

#2. Создать текстовый файл (не программно), сохранить в нём несколько строк, выполнить подсчёт строк и слов в каждой строке.
my_file = open('file_2.txt', 'r')
content = my_file.read()
print(f'Содержимое файла: \n {content}')
my_file = open('file_2.txt', 'r')
content = my_file.readlines()
print(f'Количество строк в файле - {len(content)}')
my_file = open('file_2.txt', 'r')
content = my_file.readlines()
for i in range(len(content)):
     print(f'Количество символов {i + 1} строки: {len(content[i])}')
my_file = open('file_2.txt', 'r')
content = my_file.read()
content = content.split()
print(f'Общее количество слов - {len(content)}')
my_file.close()

#3.Создать текстовый файл (не программно). Построчно записать фамилии сотрудников и величину их окладов (не менее 10 строк).
# Определить, кто из сотрудников имеет оклад менее 20 тысяч, вывести фамилии этих сотрудников.
# Выполнить подсчёт средней величины дохода сотрудников.
#Пример файла:
#Иванов 23543.12
#Петров 13749.32
with open('sal.txt', 'r') as my_file:
    sal = []
    poor = []
    my_list = my_file.read().split('\n')
    for i in my_list:
        i = i.split()
        if int(i[1]) < 20000:
            poor.append(i[0])
        sal.append(i[1])
print(f'Оклад меньше 20.000 - {poor}, средний оклад: {sum(map(int, sal)) / len(sal)}')

#4. Создать (не программно) текстовый файл со следующим содержимым:
#One — 1
#Two — 2
#Three — 3
#Four — 4
#Напишите программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.
rus = {'One' : 'Один', 'Two' : 'Два', 'Three' : 'Три', 'Four' : 'Четыре'}
new_file = []
with open('file_4.txt', 'r') as file_obj:
     #content = file_obj.read().split('\n')
     for i in file_obj:
         i = i.split(' ', 1)
         new_file.append(rus[i[0]] + '  ' + i[1])
     print(new_file)

with open('file_4_new.txt', 'w') as file_obj_2:
     file_obj_2.writelines(new_file)

#5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделённых пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить её на экран.
def summary():
    try:
        with open('file_5.txt', 'w+') as file_obj:
            line = input('Введите цифры через пробел: \n')
            file_obj.writelines(line)
            my_numb = line.split()

            print(sum(map(int, my_numb)))
    except IOError:
        print('Ошибка в файле!')
    except ValueError:
        print('Неправильно набран номер. Ошибка ввода-вывода!')

summary()

#6. Сформировать (не программно) текстовый файл.
# В нём каждая строка должна описывать учебный предмет и наличие лекционных, практических и лабораторных занятий по предмету.
# Сюда должно входить и количество занятий. Необязательно, чтобы для каждого предмета были все типы занятий.
#Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести его на экран.
#Примеры строк файла:
#Информатика: 100(л) 50(пр) 20(лаб).
#Физика: 30(л) — 10(лаб)
#Физкультура: — 30(пр) —
#Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
subj = {}
with open('file_6.txt', 'r') as init_f:
     for line in init_f:
         subject, lecture, practice, lab = line.split()
         subj[subject] = int(lecture) + int(practice) + int(lab)
     print(f'Общее количество часов по предмету - \n {subj}')

#7. Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка будет содержать данные о фирме:
# название, форма собственности, выручка, издержки.
#Пример строки файла: firm_1 ООО 10000 5000.
#Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
# Если фирма получила убытки, в расчёт средней прибыли её не включать.
#Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
# Если фирма получила убытки, также добавить её в словарь (со значением убытков).
#Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
#Итоговый список сохранить в виде json-объекта в соответствующий файл.
#Пример json-объекта:
#[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
#Подсказка: использовать менеджер контекста.
import json
profit = {}
pr = {}
prof = 0
prof_aver = 0
i = 0
with open('file_7.txt', 'r') as file:
     for line in file:
         name, firm, earning, damage = line.split()
         profit[name] = int(earning) - int(damage)
         if profit.setdefault(name) >= 0:
             prof = prof + profit.setdefault(name)
             i += 1
     if i != 0:
         prof_aver = prof / i
         print(f'Прибыль средняя - {prof_aver:.2f}')
     else:
         print(f'Прибыль средняя - отсутсвует. Все работают в убыток')
     pr = {'Cредняя прибыль': round(prof_aver)}
     profit.update(pr)
     print(f'Прибыль каждой компании - {profit}')

with open('file_7.json', 'w') as write_js:
     json.dump(profit, write_js)

     js_str = json.dumps(profit)
     print(f'Создан файл с расширением json со следующим содержимым: \n '
           f' {js_str}')
